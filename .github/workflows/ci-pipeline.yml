name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.16
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and run unit tests with coverage
        run: |
          dotnet build CardValidation.sln --configuration Release
          dotnet test UnitTests/UnitTests.csproj --collect:"XPlat Code Coverage" --results-directory ./test-results/unit

      - name: Generate coverage report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"./test-results/unit/**/coverage.cobertura.xml" -targetdir:"./coverage-report" -reporttypes:Html

      - name: Build Docker images
        run: |
          docker build -t card-validation-api -f CardValidation.Web/Dockerfile .
          docker build -t card-validation-integration-tests -f Dockerfile.integration-tests .

      - name: Run integration tests with Docker Compose
        run: docker-compose up --abort-on-container-exit --build

      - name: Copy integration test results from Docker
        if: always()  # Run this even if previous steps failed
        run: |
          mkdir -p ./test-results/integration
          docker cp $(docker ps -aqf "name=integration-tests"):/app/ReqnrollProject1/TestResults ./test-results/integration

      - name: Upload test and coverage results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: "**/*.trx"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: ./coverage-report
